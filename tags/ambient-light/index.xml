<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ambient Light on Mitchtech</title>
    <link>https://mitchtech.github.io/hugo-mitchtech/tags/ambient-light/</link>
    <description>Recent content in Ambient Light on Mitchtech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <lastBuildDate>Wed, 02 May 2012 04:44:25 +0000</lastBuildDate>
    
	<atom:link href="https://mitchtech.github.io/hugo-mitchtech/tags/ambient-light/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android &#43; IOIO &#43; Laser Tripwire</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-ioio-laser-tripwire/</link>
      <pubDate>Wed, 02 May 2012 04:44:25 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-ioio-laser-tripwire/</guid>
      <description>Laser tripwire with Android and IOIO. This article will demonstrate a proof of concept laser beam tripwire accessory.
For additional background information on interfacing Android with IOIO, check out my other introductory tutorials:
Android + IOIO + Simple Digital Output Android + IOIO + Simple Digital Input Android + IOIO + Simple Analog Output Android + IOIO + Simple Analog Input
Background on Android development, IOIO, and electronics:</description>
    </item>
    
    <item>
      <title>Android &#43; Arduino &#43; USB Host &#43; Temperature &#43; Light</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-arduino-usb-host-temperature-light/</link>
      <pubDate>Wed, 02 May 2012 04:41:37 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-arduino-usb-host-temperature-light/</guid>
      <description>Sensing temperature and light with Android and Arduino. This article will demonstrate a basic thermometer / ambient light level detection input accessory.
For additional background information on interfacing Android with the real world, check out my other introductory tutorials:
Simple Digital Input Simple Digital Output Simple Analog Input Simple Analog Output
Hardware Parts needed:  Android Device (1.6+)
 Photocell
 10K ohm resistor
 TMP36 temperature sensor</description>
    </item>
    
    <item>
      <title>Android &#43; IOIO &#43; Temperature &#43; Light</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-ioio-temperature-light/</link>
      <pubDate>Wed, 02 May 2012 04:28:06 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-ioio-temperature-light/</guid>
      <description>Sensing temperature and light with Android and IOIO. This article will demonstrate a basic thermometer / ambient light level detection input accessory.
For additional background information on interfacing Android with IOIO, check out my other introductory tutorials:
Android + IOIO + Simple Digital Output Android + IOIO + Simple Digital Input Android + IOIO + Simple Analog Output Android + IOIO + Simple Analog Input
Background on Android development, IOIO, and electronics:</description>
    </item>
    
    <item>
      <title>Android &#43; Arduino &#43; USB Host &#43; Simple Analog Input</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-arduino-usb-host-simple-analog-input/</link>
      <pubDate>Wed, 02 May 2012 03:13:18 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-arduino-usb-host-simple-analog-input/</guid>
      <description>Simplest possible analog input with the ADK. This article will discuss the bare minimal requirements for development of a basic USB input accessory. The goal is to demonstrate the easiest possible use of the technology. For additional background information on Android development, Arduino, and MicroBridge, check out these links:
Android Developer’s Guide Getting Started with Arduino Microbridge
Getting Started First, make sure you have setup the development environments for Arduino and Android:</description>
    </item>
    
  </channel>
</rss>