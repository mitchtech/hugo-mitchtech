<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Mitchtech</title>
    <link>https://mitchtech.github.io/hugo-mitchtech/tags/python/</link>
    <description>Recent content in Python on Mitchtech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <lastBuildDate>Fri, 15 Mar 2013 07:07:30 +0000</lastBuildDate>
    
	<atom:link href="https://mitchtech.github.io/hugo-mitchtech/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi OpenCV Pan &amp; Tilt Face Tracker</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-servo-face-tracker/</link>
      <pubDate>Fri, 15 Mar 2013 07:07:30 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-servo-face-tracker/</guid>
      <description>Create your own face tracking, pan and tilt camera on the Raspberry Pi!
This tutorial will demonstrate use of the OpenCV (computer vision) library to identify and track faces on the raspberry pi using two servos and a USB webcam. For the interested, I previously covered a more thorough overview of the installation of OpenCV from source here, however, I have found that the apt package is sufficient for all but the most bleeding edge of projects.</description>
    </item>
    
    <item>
      <title>Easily connect Raspberry Pi to Gmail, Facebook, Twitter &amp; more!</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-connect-gmail-facebook-twitter-more/</link>
      <pubDate>Fri, 24 Aug 2012 00:20:05 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-connect-gmail-facebook-twitter-more/</guid>
      <description>Easily connect your Raspberry Pi to web services and social networks! This tutorial demonstrates how to painlessly send and receive Gmail on the Raspberry Pi from Python, which in turn, allows you to easily connect it to web services and social networks like Facebook, Twitter, and more! This would normally be well beyond the abilities of most users due to the inherent complexities of programming through social media APis, client/server authentication, etc.</description>
    </item>
    
    <item>
      <title>Arduino Physical CPU Gauges</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/arduino-physical-cpu-gauges/</link>
      <pubDate>Tue, 03 Jul 2012 14:46:30 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/arduino-physical-cpu-gauges/</guid>
      <description>Use Arduino and two hobby servos to control physical servo gauges for cpu activity, memory usage, bandwidth, and more. The script uses the python psutil and pyserial modules. The psutil module provides an interface for retrieving information on all running processes and system utilization (CPU, disk, memory, network) providing service similar to command line tools such as ps, top, iostat, and netstat. The servo control portion of the project is based on Arduino-Python 4-Axis Servo Controlby Brian Wendt, and the Arduino sketch is essentially unmodified from the SerialServoControl Sketch on Sparkfun.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Physical Gmail Notifier</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-physical-gmail-notifier/</link>
      <pubDate>Fri, 29 Jun 2012 04:20:47 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-physical-gmail-notifier/</guid>
      <description>This tutorial will demonstrate how to easily turn your Raspberry Pi into a physical Gmail notifier, in only 10 lines of python! If the configured Gmail account has unread messages, the LED will be illuminated, otherwise dim. The project was inspired by the Arduino/Mac version by J4mie adapted for use on the Raspberry Pi.
Here is a diagram of the wiring of the LED with a 330 ohm resistor in series (created with Fritzing):</description>
    </item>
    
    <item>
      <title>Raspberry Pi &#43; OpenCV</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-opencv/</link>
      <pubDate>Thu, 14 Jun 2012 23:41:41 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-opencv/</guid>
      <description>OpenCV is a suite of powerful computer vision tools. Here is a quick overview of how I installed OpenCV on my Raspberry Pi with debian6-19-04-2012. The guide is based on the official OpenCV Installation Guide on Debian and Ubuntu. Before you begin, make sure you have expanded your SD card to allow for the install of OpenCV. Its a big package with lots of dependencies. You can follow my instructions here.</description>
    </item>
    
    <item>
      <title>OpenCV &#43; Python</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/opencv-python/</link>
      <pubDate>Wed, 02 May 2012 15:58:13 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/opencv-python/</guid>
      <description>Here are some of the more interesting OpenCV demos using the Python wrapper. The installation process on Ubuntu is covered in my previous post, OpenCV + Ubuntu. The demo scripts are located in samples/python within the OpenCV release.
The cam shift sample below demonstrates the color/object detection capability of OpenCV. To set the object/color to track, click and drag a box on the video using the mouse. The histogram window will display the target for OpenCV to locate and track within the field of view.</description>
    </item>
    
  </channel>
</rss>