<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hack on Mitchtech</title>
    <link>https://mitchtech.github.io/hugo-mitchtech/tags/hack/</link>
    <description>Recent content in Hack on Mitchtech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <lastBuildDate>Fri, 24 Aug 2012 00:20:05 +0000</lastBuildDate>
    
	<atom:link href="https://mitchtech.github.io/hugo-mitchtech/tags/hack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Easily connect Raspberry Pi to Gmail, Facebook, Twitter &amp; more!</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/connect-raspberry-pi-to-gmail-facebook-twitter-more/</link>
      <pubDate>Fri, 24 Aug 2012 00:20:05 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/connect-raspberry-pi-to-gmail-facebook-twitter-more/</guid>
      <description>Easily connect your Raspberry Pi to web services and social networks! This tutorial demonstrates how to painlessly send and receive Gmail on the Raspberry Pi from Python, which in turn, allows you to easily connect it to web services and social networks like Facebook, Twitter, and more! This would normally be well beyond the abilities of most users due to the inherent complexities of programming through social media APis, client/server authentication, etc.</description>
    </item>
    
    <item>
      <title>Easily connect Raspberry Pi to Gmail, Facebook, Twitter &amp; more!</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-connect-gmail-facebook-twitter-more/</link>
      <pubDate>Fri, 24 Aug 2012 00:20:05 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/raspberry-pi-connect-gmail-facebook-twitter-more/</guid>
      <description>Easily connect your Raspberry Pi to web services and social networks! This tutorial demonstrates how to painlessly send and receive Gmail on the Raspberry Pi from Python, which in turn, allows you to easily connect it to web services and social networks like Facebook, Twitter, and more! This would normally be well beyond the abilities of most users due to the inherent complexities of programming through social media APis, client/server authentication, etc.</description>
    </item>
    
    <item>
      <title>Arduino USB HID Keyboard</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/arduino-usb-hid-keyboard/</link>
      <pubDate>Sun, 24 Jun 2012 15:09:36 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/arduino-usb-hid-keyboard/</guid>
      <description>Turn your Arduino UNO into a USB HID keyboard, and make buttons that do whatever you want. Make it a useful tool, with new buttons for Cut/Copy/Paste or Volume+/Volume-/Mute, or annoy your friends and colleagues by setting the keyboard to perform random keypress after random delays!
  The USB HID keyboard conforms to the standard USB specification, so is functional on all modern operating systems. All this is made possible by the use of the Arduino Device Firmware Update (DFU) function.</description>
    </item>
    
    <item>
      <title>Android &#43; BackTrack Chroot</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-backtrack-chroot/</link>
      <pubDate>Wed, 02 May 2012 14:31:40 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-backtrack-chroot/</guid>
      <description>The following tutorial will demonstrate how to run Backtrack Linux in an Android chroot environment. It should work on most Android devices that support at least ARMv7 architecture or newer.
Download BackTrack ARM edition http://www.backtrack-linux.org/downloads/
You can download via torrent or direct, the rest of the settings should look like this:
Image Name: BT5-GNOME-ARM [.torrent | .7z] Size (MB): 1060 Desktop: GNOME Architecture: arm Image: IMG Download: [Direct | Torrent] MD5sum: a66bf35409f4458ee7f35a77891951eb  Extract the contents using 7zip (apt-get install p7zip if you don’t have it installed)</description>
    </item>
    
    <item>
      <title>Android &#43; Linux Chroot &#43; Common Problems</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/running-linux-on-android-common-problems/</link>
      <pubDate>Wed, 02 May 2012 13:55:10 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/running-linux-on-android-common-problems/</guid>
      <description>Corrupted Filesystem Problem: ext2 Distribution Image
Explanation: If you formated the distribution partition as ext2 then chances are you will have a filesystem corruption. The trouble is fsck doesn’t come with busybox and it’s hard to run fsck on your root filesytem while mounted. The solution is to mount the distribution image from another linux machine and run fsck.
Solution: Disable USB debugging on your phone. Plug your phone into a linux box.</description>
    </item>
    
    <item>
      <title>Android &#43; Linux Chroot &#43; Node.js</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/node-js-on-android-linux/</link>
      <pubDate>Wed, 02 May 2012 13:53:58 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/node-js-on-android-linux/</guid>
      <description>This article will walk you through how to compile, from source, node.js on Android. After installing node.js on about 4 different devices (Thunderbolt, Incredible, two G1’s, Galaxy S) I decided to compile this tutorial.
Prerequisites  Android running Debian in a chroot(ed) environment.
 Environment contains the necessary path(s)
  vim /etc/bashrc PATH=$PATH:/usr/local/bin  Swap File (G1 only?) The RAM in both the Incredible and Thunderbolt are sufficient to compile node.</description>
    </item>
    
    <item>
      <title>Android &#43; Ubuntu Chroot</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-ubuntu-chroot/</link>
      <pubDate>Wed, 02 May 2012 13:52:29 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-ubuntu-chroot/</guid>
      <description>Here is a quick overview of the process to create a Ubuntu system image that is bootable with Android chroot. It uses the rootstock utility to setup the initial image, including release version, username/password, image size, as well as to seed the desired packages to be pre-installed with the distro. For complete options with rootstock, consult the man pages.
Quickstart:
mkdir ubuntu cd ubuntu sudo rootstock \ --fqdn ubuntu \ --login ubuntu \ --password ubuntu \ --imagesize 4G \ --dist maverick \ --seed linux-image-omap,build-essential,mysql-server,tightvncserver,lxde,\ mysql-server-core-5.</description>
    </item>
    
    <item>
      <title>Ubuntu &#43; Kinect &#43; OpenNI &#43; PrimeSense</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/ubuntu-kinect-openni-primesense/</link>
      <pubDate>Wed, 02 May 2012 05:15:31 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/ubuntu-kinect-openni-primesense/</guid>
      <description>Getting the OpenNI and PrimeSense drivers working on Ubuntu Here’s an overview of the process to get the OpenNI and PrimeSense drivers working with the Kinect and Ubuntu. Begin by installing some dependencies:
sudo apt-get install git-core cmake freeglut3-dev pkg-config build-essential libxmu-dev libxi-dev libusb-1.0-0-dev doxygen graphviz mono-complete  Make a directory to store the build, then clone the OpenNI source from Github.
mkdir ~/kinect cd ~/kinect git clone https://github.</description>
    </item>
    
    <item>
      <title>Ubuntu &#43; OpenKinect &#43; Mouse Control</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/ubuntu-openkinect-mouse-control/</link>
      <pubDate>Wed, 02 May 2012 05:12:13 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/ubuntu-openkinect-mouse-control/</guid>
      <description>Mouse control with OpenKinect on Ubuntu Linux Here is a quick tutorial to get use your hand as a mouse in a Minority Report-esque interface using the Kinect and Ubuntu. Credit to Ooblik (Tim Flaman) for the awesome project. Before you begin, ensure that you have installed the OpenKinect drivers and they are functioning correctly.
Quickstart sudo apt-get install libncurses5-dev freeglut3-dev libX11-dev libxtst-dev libxmu-dev cmake git git clone https://github.</description>
    </item>
    
    <item>
      <title>Ubuntu &#43; OpenKinect</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/ubuntu-openkinect/</link>
      <pubDate>Wed, 02 May 2012 05:08:22 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/ubuntu-openkinect/</guid>
      <description>Getting started with OpenKinect on Ubuntu Linux There are two ways you can get OpenKinect (freenect) working on Ubuntu: either by installing the prebuilt PPA package, or compiling from source. I’ve confirmed at both of these methods are functional, the package based method is slightly more straightforward, and allows updates from the apt package manager. This article will demonstrate installation via this method, for details on the manual compilation method, check out the official OpenKinect Getting Started Guide</description>
    </item>
    
    <item>
      <title>Android &#43; IOIO &#43; Remote Outlets</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-ioio-remote-outlets/</link>
      <pubDate>Wed, 02 May 2012 04:51:31 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-ioio-remote-outlets/</guid>
      <description>This tutorial will demonstrate remote control of 3 AC outlets with Android and IOIO. The tutorial uses the 3 Channel Remote AC Outlets from DealExtreme. The cost, less than $25 shipped for the set of three, is quite a savings over alternatives like the PowerSwitch Tail ($25 each), also, they are wireless with a pretty good range as well.
They also have single and dual outlet version. Note: all three of these models are 110V/US plugs.</description>
    </item>
    
    <item>
      <title>Android &#43; IOIO &#43; Window Blinds Control</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-ioio-window-blinds-control/</link>
      <pubDate>Wed, 02 May 2012 04:50:00 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-ioio-window-blinds-control/</guid>
      <description>Demo Android application to control window blinds using IOIO and full rotation servos.
For additional background information on interfacing Android with IOIO, check out my other introductory tutorials:
Android + IOIO + Simple Digital Output
Android + IOIO + Simple Digital Input
Android + IOIO + Simple Analog Output
Android + IOIO + Simple Analog Input
Background on Android development, IOIO, and electronics:
Meet IOIO
IOIO for Android Beginners Guide</description>
    </item>
    
    <item>
      <title>Android &#43; IOIO &#43; Garage Door</title>
      <link>https://mitchtech.github.io/hugo-mitchtech/android-ioio-garage-door/</link>
      <pubDate>Wed, 02 May 2012 04:48:26 +0000</pubDate>
      
      <guid>https://mitchtech.github.io/hugo-mitchtech/android-ioio-garage-door/</guid>
      <description>Control your garage door with Android and IOIO.
For additional background information on interfacing Android with IOIO, check out my other introductory tutorials:
Android + IOIO + Simple Digital Output
Android + IOIO + Simple Digital Input
Android + IOIO + Simple Analog Output
Android + IOIO + Simple Analog Input
Background on Android development, IOIO, and electronics:
Meet IOIO
IOIO for Android Beginners Guide
IOIO Wiki</description>
    </item>
    
  </channel>
</rss>